class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
def isValidSequence(root: TreeNode, arr: list[int]) -> bool:
    def dfs(node: TreeNode, idx: int) -> bool:
        if node is None:
            return False
        if idx >= len(arr) or node.val != arr[idx]:
            return False
        if node.left is None and node.right is None:
            return idx == len(arr) - 1
        return dfs(node.left, idx + 1) or dfs(node.right, idx + 1)   
root = TreeNode(0)
root.left = TreeNode(1)
root.right = TreeNode(0)
root.left.left = TreeNode(0)
root.left.right = TreeNode(1)
root.right.left = TreeNode(0)
root.right.right = TreeNode(1)
root.left.right.left = TreeNode(1)
root.left.right.right = TreeNode(0)
root.right.left.left = TreeNode(0)
root.right.left.right = TreeNode(0)
print(isValidSequence(root, [0, 1, 0, 1])) 
print(isValidSequence(root, [0, 0, 1]))    
print(isValidSequence(root, [0, 1, 1]))    
